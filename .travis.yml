# http://travis-ci.org/mpi4py/mpi4py

language: python
python:
  - 2.7
  - 3.3
  - 3.4
  - 3.5
  - 3.6

os: linux
dist: trusty
sudo: required

env:
  global:
    - HYDRA_LAUNCHER=fork
    - OMPI_MCA_rmaps_base_oversubscribe=yes
  matrix:
    - MPI=mpich
    - MPI=openmpi

matrix:
  include:
    - os: osx
      env: MPI=mpich PY=2
      language: generic
      python: 2
    - os: osx
      env: MPI=openmpi PY=2
      language: generic
      python: 2
    - os: osx
      env: MPI=mpich PY=3
      language: generic
      python: 3
    - os: osx
      env: MPI=openmpi PY=3
      language: generic
      python: 3
    - python: pypy2.7-5.10.0
      env: MPI=mpich
    - python: pypy2.7-5.10.0
      env: MPI=openmpi
    - python: pypy3.5-5.10.0
      env: MPI=mpich
    - python: pypy3.5-5.10.0
      env: MPI=openmpi
  allow_failures:
    - python: pypy2.7-5.10.0
      env: MPI=mpich
    - python: pypy2.7-5.10.0
      env: MPI=openmpi
    - python: pypy3.5-5.10.0
      env: MPI=mpich
    - python: pypy3.5-5.10.0
      env: MPI=openmpi

branches:
  only:
    - master
    - maint

git:
  depth: 3

cache:
  apt: true

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo apt-get update -q
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew update
        brew cask uninstall oclint
        if [[ "$PY" == "3" ]]; then  # Install Python 3
            brew upgrade python
        fi
    fi
  - python$PY -m pip install Cython
  - python$PY -m pip install numpy
  - ./conf/ci/travis-ci/install-mpi.sh $MPI
  - python$PY --version
  - python$PY -m cython --version
  - python$PY -c "import numpy;print(numpy.__version__)"
  - if [[ "$MPI" == "mpich"   ]]; then mpichversion; fi
  - if [[ "$MPI" == "openmpi" ]]; then ompi_info;    fi
install:
  - python$PY -m pip -vvv install .

before_script:
  - if [[ "$MPI" == "mpich" ]]; then P=2; else P=5; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];  then P=2; fi
script:
  - mpiexec -n 1  python$PY $PWD/test/runtests.py -v
  - mpiexec -n $P python$PY $PWD/test/runtests.py -v -f -e spawn
  - mpiexec -n 1  python$PY $PWD/demo/futures/test_futures.py -v
  - mpiexec -n $P python$PY $PWD/demo/futures/test_futures.py -v
  - mpiexec -n 1  python$PY -m mpi4py.futures $PWD/demo/futures/test_futures.py -v
  - mpiexec -n $P python$PY -m mpi4py.futures $PWD/demo/futures/test_futures.py -v

#notifications:
#  email: false
